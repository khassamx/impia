import os
from openai import OpenAI
import json

# Aseg√∫rate de que la variable de entorno HF_TOKEN est√© configurada en tu sistema.
# Si no lo est√°, la l√≠nea os.environ["HF_TOKEN"] fallar√°.
try:
    HF_TOKEN = os.environ["HF_TOKEN"]
except KeyError:
    print("üõë ERROR: La variable de entorno HF_TOKEN no est√° configurada.")
    print("Necesitas tu token de Hugging Face para usar este c√≥digo.")
    exit()


# 1. Configurar el cliente OpenAI para Hugging Face Router
client = OpenAI(
    # La base_url es el router unificado de Hugging Face
    base_url="https://router.huggingface.co/v1",
    api_key=HF_TOKEN,
)

# 2. Realizar la solicitud de completado de chat
try:
    print("‚è≥ Solicitando di√°logo al modelo moonshotai/Kimi-K2-Instruct-0905 (Proveedor: Groq)...")
    completion = client.chat.completions.create(
        model="moonshotai/Kimi-K2-Instruct-0905",
        messages=[
            {
                "role": "user",
                "content": "Write a dialogue between two characters meeting for the first time."
            }
        ],
        # Puedes a√±adir otros par√°metros como max_tokens, temperature, etc.
    )

    # 3. Imprimir el mensaje generado por el asistente
    dialogue = completion.choices[0].message.content
    print("\n" + "="*50)
    print("‚úÖ Di√°logo Generado:")
    print("="*50)
    print(dialogue)
    print("="*50)

except Exception as e:
    print(f"\nüö® Ocurri√≥ un error al llamar a la API: {e}")
    print("Verifica si tu HF_TOKEN es v√°lido o si tienes saldo de inferencia.")
